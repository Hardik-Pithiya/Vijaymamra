[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Gate Pass",
  "enabled": 1,
  "modified": "2023-09-20 17:45:16.960493",
  "module": "vijaymamra",
  "name": "Gate Pass",
  "script": "frappe.ui.form.on('Gate Pass', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n})\n\nfrappe.ui.form.on('Gate Pass Item', {\n\tqty:function(frm) {\n\t    var total_qty = 0\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t    total_qty += d.qty\n\t\t})\n\t\tfrm.set_value(\"total_qty\", total_qty)\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Gate Pass",
  "enabled": 1,
  "modified": "2023-09-20 17:51:50.958056",
  "module": "vijaymamra",
  "name": "Gate Pass List View Update",
  "script": "frappe.listview_settings['Gate Pass'] = {\n   has_indicator_for_cancelled: true,\n   has_indicator_for_Submitted: true,\n   get_indicator(doc)  {\n     \n       if (doc.docstatus == 1) {\n           return [__(\"Open\"), \"red\", \"docstatus,=,1\"];\n       }\n       else if (doc.docstatus == 3) {\n           return [__(\"Close\"), \"green\", \"docstatus,=,3\"];\n       }\n   },\n}\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Gate Pass Return",
  "enabled": 1,
  "modified": "2023-09-22 16:03:37.407777",
  "module": "vijaymamra",
  "name": "Gate Pass Return",
  "script": "frappe.ui.form.on('Gate Pass Return', {\n\tgate_pass_no:function(frm) {\n\t\tfrappe.call({\n\t\t    method:\"Ftach Data Of Gate Pass Master\",\n\t\t    args:{\"name\":frm.doc.gate_pass_no}\n\t\t}).then(records=>{\n\t\t    var data = records['record']\n\t\t    \n\t\t    frm.set_value(\"items\", 0)\n\t\t    data.forEach(function(obj){\n\t\t        var row = frm.add_child(\"items\")\n\t\t        row.item_code = obj.item_code;\n\t\t        row.item_name = obj.item_name;\n\t\t        row.qty = obj.qty;\n\t\t        row.description = obj.description;\n\t\t    })\n\t\t    frm.refresh_field(\"items\")\n\t\t})\n\t},\n\tbefore_save:function(frm){\n\t    var total_qty = 0\n\t    $.each(frm.doc.items || [], function(i,d){\n\t        total_qty += d.qty\n\t        frappe.call({\n\t            method:\"Status Update in Gate Master\",\n\t            args:{\"item_code\":d.item_code, 'parent':frm.doc.gate_pass_no, 'status':d.status}\n\t        })\n\t    })\n\t    frm.set_value(\"total_qty\",total_qty)\n\t},\n\ton_submit:function(frm){\n\t    frappe.call({\n\t        method:\"Gate Pass Master Status Update\",\n\t        args:{'name':frm.doc.gate_pass_no}\n\t    })\n\t},\n\trefresh:function(frm){\n\t    frm.set_query('gate_pass_no', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\tfilters: {\n\t\t\t  'docstatus': 1, \n\t\t\t}\n            \t};\n\t    });\n\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Production Plan",
  "enabled": 1,
  "modified": "2023-10-03 10:17:10.506612",
  "module": "vijaymamra",
  "name": "Production Plan Customization",
  "script": "frappe.ui.form.on('Production Plan', {\n\ton_submit:function(frm) {\n// \t\tif(frm.is_new()){\n\t\t    $.each(frm.doc.sales_orders || [], function(i,d){\n\t\t        frappe.call({\n\t\t            method:\"truck no update in sales order\",\n\t\t            args:{'so_name':d.sales_order, 'truck_no':d.custom_truck_no, 'date':frm.doc.posting_date}\n\t\t        })\n\t\t    })\n// \t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Gate Pass Out",
  "enabled": 1,
  "modified": "2023-09-22 16:50:53.339011",
  "module": "vijaymamra",
  "name": "Gate Pass Out Data Get",
  "script": "frappe.ui.form.on('Gate Pass Out', {\n\tgate_pass_inwards:function(frm) {\n\t\tfrappe.call({\n\t\t    method: \"GatePassOUTWARDS\",\n\t\t    args:{\"gateID\": frm.doc.gate_pass_inwards}\n\t\t}).then (records=>{\n\t\t    var data = records[\"record\"]\n\t\t    data.forEach(function(obj){\n\t\t        frm.set_value(\"company_name\", obj.company_name)\n\t\t        frm.set_value(\"driver_name\", obj.driver_name)\n\t\t        frm.set_value(\"vehicle_number\", obj.vehicle_number)\n\t\t        frm.set_value(\"driver_contact_number\", obj.driver_contact_number)\n\t\t        frm.set_value(\"tier_weight\", obj.tier_weight)\n\t\t    })\n\t\t}) \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2023-10-03 16:33:28.157696",
  "module": "vijaymamra",
  "name": "Get Truck No in Sales Order",
  "script": "frappe.ui.form.on('Stock Entry', {\n\twork_order:function(frm) {\n\t\tfrappe.call({\n\t\t    method:\"Work Order Get Truck No In So\",\n\t\t    args:{'wo_name':frm.doc.work_order}\n\t\t}).then(records =>{\n\t\t    var data = records['data']\n\t\t    \n\t\t    data.forEach(function(obj){\n\t\t        frm.set_value(\"custom_truck_no\", obj.truck_no)\n\t\t    })\n\t\t    \n\t\t})\n\t},\n\tonload:function(frm){\n\t    if(frm.doc.work_order != undefined)\n\t    frappe.call({\n\t\t    method:\"Work Order Get Truck No In So\",\n\t\t    args:{'wo_name':frm.doc.work_order}\n\t\t}).then(records =>{\n\t\t    var data = records['data']\n\t\t    \n\t\t    data.forEach(function(obj){\n\t\t        frm.set_value(\"custom_truck_no\", obj.truck_no)\n\t\t    })\n\t\t    \n\t\t})\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Gate Pass Out",
  "enabled": 1,
  "modified": "2023-09-22 17:25:23.682275",
  "module": "vijaymamra",
  "name": "Tolerance_Calculation",
  "script": "frappe.ui.form.on('Gate Pass Out', {\n\tbefore_save:function(frm) {\n\t\tconst netWeight = frm.doc.net_weight || 0;\n        const totalWeight = frm.doc.total_weight || 0;\n        const tolerance = frm.doc.tolerance_in_ || 0;\n        const totalWeightUpper = totalWeight + (totalWeight * tolerance / 100);\n        const totalWeightLower = totalWeight - (totalWeight * tolerance / 100);\n        \n        // if (frm.doc.net_weight >= totalWeightLower && frm.doc.net_weight <= totalWeightUpper) {\n            \n        // } else {\n        //     frappe.throw(\"Your Tolerance Is Out Of Range\");\n        // }\n\t},\n\tgross_weight:function(frm){\n\t    var net_weight = frm.doc.gross_weight - frm.doc.tier_weight\n\t    frm.set_value(\"net_weight\",net_weight)\n\t    var toleratedWeight = frm.doc.net_weight - frm.doc.total_weight;\n\t    frm.set_value(\"tolerated_weight\",toleratedWeight)\n\t    var toleratedpercent = (frm.doc.tolerated_weight / frm.doc.total_weight) * 100;\n\t    frm.set_value(\"tolerance_in_\",toleratedpercent);\n\t},\n\ton_submit:function(frm){\n\t    frappe.call({\n\t        method:\"gate pass in status update\",\n\t        args:{'gate_name':frm.doc.gate_pass_inwards}\n\t    })\n\t}\n})\n\nfrappe.ui.form.on('Invoice Details', {\n    invoice_number: function (frm) {\n        var total_weight = 0;\n        var promises = [];\n    \n        $.each(frm.doc.invoice_details || [], function (i, d) {\n            var promise = new Promise(function (resolve, reject) {\n                frappe.call({\n                    method: \"get_invoice_weight\",\n                    args: { 'si_name': d.invoice_number },\n                    callback: function (r) {\n                        r.data.forEach(function(obj){\n                            if (obj.total_net_weight) {\n                                d.weight = obj.total_net_weight;\n                                total_weight += d.weight;\n                                resolve();\n                            } else {\n                                reject();\n                            }\n                        })\n                        \n                    }\n                });\n            });\n    \n            promises.push(promise);\n        });\n        Promise.all(promises).then(function () {\n            frm.refresh_field(\"invoice_details\");\n            frm.set_value(\"total_weight\", total_weight);\n        }).catch(function () {\n        });\n    }\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2023-10-06 16:30:29.954897",
  "module": "vijaymamra",
  "name": "Delivery Note Get Truck No on so",
  "script": "frappe.ui.form.on('Delivery Note', {\n\trefresh:function(frm) {\n\t    if(frm.doc.custom_sales_order != undefined && frm.doc.custom_truck_no == undefined){\n\t        frappe.call({\n\t            method:\"get truck no\",\n\t            args:{'so_name':frm.doc.custom_sales_order}\n\t        }).then(records=>{\n\t            var data = records['data']\n\t            \n\t            data.forEach(function(obj){\n\t                frm.set_value(\"custom_truck_no\", obj.truck_no)\n\t                frm.set_value(\"vehicle_no\", obj.truck_no)\n\t            })\n\t        })\n\t    }\n\t\t\n\t}\n})\n\nfrappe.ui.form.on('Delivery Note Item', {\n\titem_code: function(frm) {\n    \n        var isNilExemptChecked = false;\n        \n        $.each(frm.doc.items || [], function(i, d) {\n          if (d.is_nil_exempt == 1) {\n            isNilExemptChecked = true;\n            return false; \n          }\n        });\n    \n        \n        if (isNilExemptChecked) {\n          $.each(frm.doc.taxes || [], function(j, tax) {\n            if (tax.account_head.toUpperCase().includes('GST')) {\n              frappe.model.set_value(tax.doctype, tax.name, 'rate', 0);\n            }\n          });\n          \n          frm.refresh_fields('taxes');\n        }\n  }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Gate Pass In",
  "enabled": 1,
  "modified": "2023-09-22 17:28:42.894108",
  "module": "vijaymamra",
  "name": "Gate Pass Status Update In List View",
  "script": "frappe.listview_settings['Gate Pass In'] = {\n   has_indicator_for_cancelled: true,\n   has_indicator_for_Submitted: true,\n   get_indicator(doc)  {\n     \n       if (doc.docstatus == 1) {\n           return [__(\"Open\"), \"green\", \"docstatus,=,1\"];\n       }\n       else if (doc.docstatus == 3) {\n           return [__(\"Close\"), \"red\", \"docstatus,=,3\"];\n       }\n   },\n}\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-10-06 16:28:49.120057",
  "module": "vijaymamra",
  "name": "Supplier Wise Automatically Add Tax Stop",
  "script": "frappe.ui.form.on('Sales Invoice', {\r    naming_series:function(frm){\r        if(frm.doc.naming_series == \"GST-.YY.-\"){\r             frm.fields_dict['items'].grid.get_field('item_code').get_query = function (doc, cdt, cdn) {\r            var child = locals[cdt][cdn];\r            return {\r                filters: {\r                    'is_nil_exempt': 0,                    \r                    'is_purchase_item': 1,\r                }\r            };\r\r        };\r        frm.set_value(\"items\", 0)\r        frm.refresh_field(\"items\");\r        }\r        else if(frm.doc.naming_series == \"BOS-.YY.-\"){\r             frm.fields_dict['items'].grid.get_field('item_code').get_query = function (doc, cdt, cdn) {\r            var child = locals[cdt][cdn];\r            return {\r                filters: {\r                    'is_nil_exempt': 1,                    \r                    'is_purchase_item': 1,\r                }\r            };\r\r        };\r        frm.set_value(\"items\", 0)\r        frm.refresh_field(\"items\");\r        }\r    },\r    on_submit:function(frm){\r        if(frm.doc.is_return == 0){\r            frappe.call({\r                method:\"status update in purchase order truck\",\r                args:{\"delivery_name\":frm.doc.custom_deliver_note_no, \"truck_no\":frm.doc.custom_truck_no}\r            })\r        }\r    },\r    onload:function(frm){\r        if(frm.doc.is_return == 1){\r            frm.set_value(\"naming_series\", \"SRET-.YY.-\")\r        }\r    },\r    before_save:function(frm){\r        var total_bag = 0\r        $.each(frm.doc.items || [], function(i,d){\r            total_bag += d.custom_bag\r        })\r        frm.set_value(\"custom_total_bag\", total_bag)\r    }\r});\r\rfrappe.ui.form.on('Sales Invoice Item', {\r\titem_code: function(frm) {\r    \r    var isNilExemptChecked = false;\r    \r    $.each(frm.doc.items || [], function(i, d) {\r      if (d.is_nil_exempt == 1) {\r        isNilExemptChecked = true;\r        return false; \r      }\r    });\r\r    \r    if (isNilExemptChecked) {\r      $.each(frm.doc.taxes || [], function(j, tax) {\r        if (tax.account_head.toUpperCase().includes('GST')) {\r            frappe.model.set_value(tax.doctype, tax.name, 'rate', 0);\r        }\r      });\r      \r      frm.refresh_fields('taxes');\r    }\r  }\r})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2023-10-09 13:22:02.485359",
  "module": "vijaymamra",
  "name": "Purchase Order Customisation",
  "script": "frappe.ui.form.on('Purchase Order Item', {\n\tcustom_rate_per_kg:function(frm) {\n\t    var total_rate = 0.0\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t    if(d.custom_rate_per_kg > 150){\n\t\t        d.rate = d.custom_rate_per_kg / 20\n\t\t    }\n\t\t    else{\n\t\t        d.rate = d.custom_rate_per_kg\n\t\t    }\n\t\t    d.amount = d.rate * d.qty\n\t\t    total_rate += d.amount\n\t\t})\n\t\tfrm.set_value('total', total_rate);\n\t\tfrm.refresh_field(\"items\");\n\t\tcur_frm.cscript.calculate_taxes_and_totals();\n\t\tfrm.refresh_fields();\n\t},\n\titem_code: function(frm) {\n    \n    var isNilExemptChecked = false;\n    \n    $.each(frm.doc.items || [], function(i, d) {\n      if (d.is_nil_exempt == 1) {\n        isNilExemptChecked = true;\n        return false; \n      }\n    });\n\n    \n    if (isNilExemptChecked) {\n      $.each(frm.doc.taxes || [], function(j, tax) {\n        if (tax.account_head.toUpperCase().includes('GST')) {\n          frappe.model.set_value(tax.doctype, tax.name, 'rate', 0);\n        }\n      });\n      \n      frm.refresh_fields('taxes');\n    }\n  }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2023-10-09 13:30:56.700393",
  "module": "vijaymamra",
  "name": "Sales order Customization",
  "script": "frappe.ui.form.on('Sales Order Item', {\n\tcustom_rate_per_kg:function(frm) {\n\t    var total_rate = 0.0\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t    if(d.custom_rate_per_kg > 150)\n\t\t    {\n\t\t        d.rate = d.custom_rate_per_kg / 20\n\t\t    }\n\t\t    else{\n\t\t        d.rate = d.custom_rate_per_kg\n\t\t    }\n\t\t    d.amount = d.rate * d.qty\n\t\t    total_rate += d.amount\n\t\t})\n\t\tfrm.set_value('total', total_rate)\n\t\tfrm.refresh_field(\"items\")\n\t\tcur_frm.cscript.calculate_taxes_and_totals();\n\t\tfrm.refresh_field()\n\t}\n})\n\n\nfrappe.ui.form.on('Sales Order Item', {\n  item_code: function(frm) {\n    \n    var isNilExemptChecked = false;\n    \n    $.each(frm.doc.items || [], function(i, d) {\n      if (d.is_nil_exempt == 1) {\n        isNilExemptChecked = true;\n        return false; \n      }\n    });\n\n    \n    if (isNilExemptChecked) {\n      $.each(frm.doc.taxes || [], function(j, tax) {\n        if (tax.account_head.toUpperCase().includes('GST')) {\n          frappe.model.set_value(tax.doctype, tax.name, 'rate', 0);\n        }\n      });\n      \n      frm.refresh_fields('taxes');\n    }\n  }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-10-09 11:48:37.191105",
  "module": "vijaymamra",
  "name": "Supplier Master Customisation",
  "script": "frappe.ui.form.on('Supplier', {\n\tsupplier_group:function(frm) {\n\t    if(frm.doc.supplier_group == \"Brokers\")\n\t    {\n\t        set_field_options(\"naming_series\", [\"BR.###\"])\n    \t\tvar a =  \"BR.###\"\n    \t\tfrm.set_value(\"naming_series\",a)\n    \t\tfrm.set_value(\"custom_series\",a)\n\t    }\n\t    else if(frm.doc.supplier_group == \"Machine Hardware and Electrical\"){\n\t        set_field_options(\"naming_series\", [\"MH.###\"])\n    \t\tvar a =  \"MH.###\"\n    \t\tfrm.set_value(\"naming_series\",a)\n    \t\tfrm.set_value(\"custom_series\",a)\n\t    }\n\t    else if(frm.doc.supplier_group == \"Makkai Poha\"){\n\t        set_field_options(\"naming_series\", [\"CF.###\"])\n    \t\tvar a =  \"CF.###\"\n    \t\tfrm.set_value(\"naming_series\",a)\n    \t\tfrm.set_value(\"custom_series\",a)\n\t    }\n\t    else if(frm.doc.supplier_group == \"Poha Supplier\"){\n\t        set_field_options(\"naming_series\", [\"POS.###\"])\n    \t\tvar a =  \"POS.###\"\n    \t\tfrm.set_value(\"naming_series\",a)\n    \t\tfrm.set_value(\"custom_series\",a)\n\t    }\n\t    else if(frm.doc.supplier_group == \"Transport\"){\n\t        set_field_options(\"naming_series\", [\"TR.###\"])\n    \t\tvar a =  \"TR.###\"\n    \t\tfrm.set_value(\"naming_series\",a)\n    \t\tfrm.set_value(\"custom_series\",a)\n\t    }\n\t    else{\n    \t\tvar list = frm.doc.supplier_group.split(' ')\n    \t\tvar series = \"\"\n    \t\tlist.forEach(function(obj){\n    \t\t    series += obj[0][0]\n    \t\t})\n    \t\tset_field_options(\"naming_series\", [series + \".###\"])\n    \t\tvar a = series + \".###\"\n    \t\tfrm.set_value(\"naming_series\",a)\n    \t\tfrm.set_value(\"custom_series\",a)\n\t    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2023-10-06 16:31:56.060379",
  "module": "vijaymamra",
  "name": "Purchase Invoice Customisation",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\tonload:function(frm) {\n\t\tif(frm.doc.is_return == 1){\n\t\t    frm.set_value(\"naming_series\", \"PRET-.YY.-\")\n\t\t}\n\t}\n})\n\nfrappe.ui.form.on('Purchase Invoice Item', {\n\titem_code: function(frm) {\n    \n    var isNilExemptChecked = false;\n    \n    $.each(frm.doc.items || [], function(i, d) {\n      if (d.is_nil_exempt == 1) {\n        isNilExemptChecked = true;\n        return false; \n      }\n    });\n\n    \n    if (isNilExemptChecked) {\n      $.each(frm.doc.taxes || [], function(j, tax) {\n        if (tax.account_head.toUpperCase().includes('GST')) {\n          frappe.model.set_value(tax.doctype, tax.name, 'rate', 0);\n        }\n      });\n      \n      frm.refresh_fields('taxes');\n    }\n  }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2023-10-06 16:32:46.361849",
  "module": "vijaymamra",
  "name": "Purchase Receipt Customisation",
  "script": "frappe.ui.form.on('Purchase Receipt Item', {\n\titem_code: function(frm) {\n    \n    var isNilExemptChecked = false;\n    \n    $.each(frm.doc.items || [], function(i, d) {\n      if (d.is_nil_exempt == 1) {\n        isNilExemptChecked = true;\n        return false; \n      }\n    });\n\n    \n    if (isNilExemptChecked) {\n      $.each(frm.doc.taxes || [], function(j, tax) {\n        if (tax.account_head.toUpperCase().includes('GST')) {\n          frappe.model.set_value(tax.doctype, tax.name, 'rate', 0);\n        }\n      });\n      \n      frm.refresh_fields('taxes');\n    }\n  }\n})",
  "view": "Form"
 }
]