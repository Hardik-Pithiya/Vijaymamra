[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Gate Pass",
  "enabled": 1,
  "modified": "2024-06-18 16:40:48.270887",
  "module": "vijaymamra",
  "name": "Gate Pass",
  "script": "frappe.ui.form.on('Gate Pass Item', {\n\tqty:function(frm) {\n\t    var total_qty = 0\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t    total_qty += d.qty\n\t\t})\n\t\tfrm.set_value(\"total_qty\", total_qty)\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Gate Pass",
  "enabled": 1,
  "modified": "2024-06-24 17:49:34.173110",
  "module": "vijaymamra",
  "name": "Gate Pass List View Update",
  "script": "frappe.listview_settings['Gate Pass'] = {\n   has_indicator_for_cancelled: true,\n   has_indicator_for_Submitted: true,\n   get_indicator(doc)  {\n     \n       if (doc.docstatus == 1 && doc.completed == 0) {\n           return [__(\"Open\"), \"red\", \"completed,=,0\"];\n       }\n       else if (doc.docstatus == 1 && doc.completed == 1) {\n           return [__(\"Close\"), \"green\", \"completed,=,1\"];\n       }\n   },\n}\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Gate Pass Return",
  "enabled": 1,
  "modified": "2023-09-22 16:03:37.407777",
  "module": "vijaymamra",
  "name": "Gate Pass Return",
  "script": "frappe.ui.form.on('Gate Pass Return', {\n\tgate_pass_no:function(frm) {\n\t\tfrappe.call({\n\t\t    method:\"Ftach Data Of Gate Pass Master\",\n\t\t    args:{\"name\":frm.doc.gate_pass_no}\n\t\t}).then(records=>{\n\t\t    var data = records['record']\n\t\t    \n\t\t    frm.set_value(\"items\", 0)\n\t\t    data.forEach(function(obj){\n\t\t        var row = frm.add_child(\"items\")\n\t\t        row.item_code = obj.item_code;\n\t\t        row.item_name = obj.item_name;\n\t\t        row.qty = obj.qty;\n\t\t        row.description = obj.description;\n\t\t    })\n\t\t    frm.refresh_field(\"items\")\n\t\t})\n\t},\n\tbefore_save:function(frm){\n\t    var total_qty = 0\n\t    $.each(frm.doc.items || [], function(i,d){\n\t        total_qty += d.qty\n\t        frappe.call({\n\t            method:\"Status Update in Gate Master\",\n\t            args:{\"item_code\":d.item_code, 'parent':frm.doc.gate_pass_no, 'status':d.status}\n\t        })\n\t    })\n\t    frm.set_value(\"total_qty\",total_qty)\n\t},\n\ton_submit:function(frm){\n\t    frappe.call({\n\t        method:\"Gate Pass Master Status Update\",\n\t        args:{'name':frm.doc.gate_pass_no}\n\t    })\n\t},\n\trefresh:function(frm){\n\t    frm.set_query('gate_pass_no', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\tfilters: {\n\t\t\t  'docstatus': 1, \n\t\t\t}\n            \t};\n\t    });\n\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Production Plan",
  "enabled": 1,
  "modified": "2023-10-03 10:17:10.506612",
  "module": "vijaymamra",
  "name": "Production Plan Customization",
  "script": "frappe.ui.form.on('Production Plan', {\n\ton_submit:function(frm) {\n// \t\tif(frm.is_new()){\n\t\t    $.each(frm.doc.sales_orders || [], function(i,d){\n\t\t        frappe.call({\n\t\t            method:\"truck no update in sales order\",\n\t\t            args:{'so_name':d.sales_order, 'truck_no':d.custom_truck_no, 'date':frm.doc.posting_date}\n\t\t        })\n\t\t    })\n// \t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Gate Pass Out",
  "enabled": 1,
  "modified": "2023-09-22 16:50:53.339011",
  "module": "vijaymamra",
  "name": "Gate Pass Out Data Get",
  "script": "frappe.ui.form.on('Gate Pass Out', {\n\tgate_pass_inwards:function(frm) {\n\t\tfrappe.call({\n\t\t    method: \"GatePassOUTWARDS\",\n\t\t    args:{\"gateID\": frm.doc.gate_pass_inwards}\n\t\t}).then (records=>{\n\t\t    var data = records[\"record\"]\n\t\t    data.forEach(function(obj){\n\t\t        frm.set_value(\"company_name\", obj.company_name)\n\t\t        frm.set_value(\"driver_name\", obj.driver_name)\n\t\t        frm.set_value(\"vehicle_number\", obj.vehicle_number)\n\t\t        frm.set_value(\"driver_contact_number\", obj.driver_contact_number)\n\t\t        frm.set_value(\"tier_weight\", obj.tier_weight)\n\t\t    })\n\t\t}) \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2023-10-03 16:33:28.157696",
  "module": "vijaymamra",
  "name": "Get Truck No in Sales Order",
  "script": "frappe.ui.form.on('Stock Entry', {\n\twork_order:function(frm) {\n\t\tfrappe.call({\n\t\t    method:\"Work Order Get Truck No In So\",\n\t\t    args:{'wo_name':frm.doc.work_order}\n\t\t}).then(records =>{\n\t\t    var data = records['data']\n\t\t    \n\t\t    data.forEach(function(obj){\n\t\t        frm.set_value(\"custom_truck_no\", obj.truck_no)\n\t\t    })\n\t\t    \n\t\t})\n\t},\n\tonload:function(frm){\n\t    if(frm.doc.work_order != undefined)\n\t    frappe.call({\n\t\t    method:\"Work Order Get Truck No In So\",\n\t\t    args:{'wo_name':frm.doc.work_order}\n\t\t}).then(records =>{\n\t\t    var data = records['data']\n\t\t    \n\t\t    data.forEach(function(obj){\n\t\t        frm.set_value(\"custom_truck_no\", obj.truck_no)\n\t\t    })\n\t\t    \n\t\t})\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Gate Pass Out",
  "enabled": 1,
  "modified": "2024-06-18 17:17:07.380105",
  "module": "vijaymamra",
  "name": "Tolerance_Calculation",
  "script": "frappe.ui.form.on('Gate Pass Out', {\n\tbefore_save:function(frm) {\n\t\tconst netWeight = frm.doc.net_weight || 0;\n        const totalWeight = frm.doc.total_weight || 0;\n        const tolerance = frm.doc.tolerance_in_ || 0;\n        const totalWeightUpper = totalWeight + (totalWeight * tolerance / 100);\n        const totalWeightLower = totalWeight - (totalWeight * tolerance / 100);\n        \n        // if (frm.doc.net_weight >= totalWeightLower && frm.doc.net_weight <= totalWeightUpper) {\n            \n        // } else {\n        //     frappe.throw(\"Your Tolerance Is Out Of Range\");\n        // }\n        var net_weight = frm.doc.gross_weight - frm.doc.tier_weight\n\t    frm.set_value(\"net_weight\",net_weight)\n\t    var toleratedWeight = frm.doc.net_weight - frm.doc.total_weight;\n\t    frm.set_value(\"tolerated_weight\",toleratedWeight)\n\t    var toleratedpercent = (frm.doc.tolerated_weight / frm.doc.total_weight) * 100;\n\t    frm.set_value(\"tolerance_in_\",toleratedpercent);\n\t},\n\tgross_weight:function(frm){\n\t    var net_weight = frm.doc.gross_weight - frm.doc.tier_weight\n\t    frm.set_value(\"net_weight\",net_weight)\n\t    var toleratedWeight = frm.doc.net_weight - frm.doc.total_weight;\n\t    frm.set_value(\"tolerated_weight\",toleratedWeight)\n\t    var toleratedpercent = (frm.doc.tolerated_weight / frm.doc.total_weight) * 100;\n\t    frm.set_value(\"tolerance_in_\",toleratedpercent);\n\t},\n\ton_submit:function(frm){\n\t    frappe.call({\n\t        method:\"gate pass in status update\",\n\t        args:{'gate_name':frm.doc.gate_pass_inwards}\n\t    })\n\t}\n})\n\nfrappe.ui.form.on('Invoice Details', {\n    invoice_number: function (frm) {\n        var total_weight = 0;\n        var total_qty = 0;\n        \n        $.each(frm.doc.invoice_details || [], function (i, d) {\n          total_weight += d.weight;\n          total_qty += d.total_quantity;\n          \n        });\n            \n        frm.set_value(\"total_weight\", total_weight);\n        frm.set_value(\"total_quantity\", total_qty)\n         var net_weight = frm.doc.gross_weight - frm.doc.tier_weight\n\t    frm.set_value(\"net_weight\",net_weight)\n\t    var toleratedWeight = frm.doc.net_weight - frm.doc.total_weight;\n\t    frm.set_value(\"tolerated_weight\",toleratedWeight)\n\t    var toleratedpercent = (frm.doc.tolerated_weight / frm.doc.total_weight) * 100;\n\t    frm.set_value(\"tolerance_in_\",toleratedpercent);\n       \n    }\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2024-06-13 18:32:43.027586",
  "module": "vijaymamra",
  "name": "Delivery Note Get Truck No on so",
  "script": "frappe.ui.form.on('Delivery Note', {\n\trefresh:function(frm) {\n\t    if(frm.doc.custom_sales_order != undefined && frm.doc.custom_truck_no == undefined){\n\t        frappe.call({\n\t            method:\"get truck no\",\n\t            args:{'so_name':frm.doc.custom_sales_order}\n\t        }).then(records=>{\n\t            var data = records['data']\n\t            \n\t            data.forEach(function(obj){\n\t                frm.set_value(\"custom_truck_no\", obj.truck_no)\n\t                frm.set_value(\"vehicle_no\", obj.truck_no)\n\t            })\n\t        })\n\t    }\n\t\t\n\t},\n\tonload:function(frm){\n        frm.set_query('custom_broker', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\tfilters: {\n\t\t\t  'supplier_group': 'Brokers', \n\t\t\t}\n            \t};\n\t    });\n    }\n})\n\nfrappe.ui.form.on('Delivery Note Item', {\n\titem_code: function(frm) {\n    \n        var isNilExemptChecked = false;\n        \n        $.each(frm.doc.items || [], function(i, d) {\n          if (d.is_nil_exempt == 1) {\n            isNilExemptChecked = true;\n            return false; \n          }\n        });\n    \n        \n        if (isNilExemptChecked) {\n          $.each(frm.doc.taxes || [], function(j, tax) {\n            if (tax.account_head.toUpperCase().includes('GST')) {\n              frappe.model.set_value(tax.doctype, tax.name, 'rate', 0);\n            }\n          });\n          \n          frm.refresh_fields('taxes');\n        }\n    },\n    custom_rate_per_kg:function(frm) {\n\t    var total_rate = 0.0\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t    if(d.custom_rate_per_kg > 150)\n\t\t    {\n\t\t      //  d.rate = d.custom_rate_per_kg / 20\n\t\t        d.rate = (d.custom_rate_per_kg / 20) * d.weight_per_unit\n    \t\t    d.amount = d.rate * d.qty\n    \t\t    total_rate += d.amount\n\t\t    }\n\t\t    else{\n\t\t      //  d.rate = d.custom_rate_per_kg\n\t\t        d.rate = d.custom_rate_per_kg  * d.weight_per_unit\n    \t\t    d.amount = d.rate * d.qty\n    \t\t    total_rate += d.amount\n\t\t    }\n\t\t})\n\t\tfrm.set_value('total', total_rate)\n\t\tfrm.refresh_field(\"items\")\n\t\tcur_frm.cscript.calculate_taxes_and_totals();\n\t\tfrm.refresh_field()\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Gate Pass In",
  "enabled": 1,
  "modified": "2024-06-25 15:13:17.145262",
  "module": "vijaymamra",
  "name": "Gate Pass Status Update In List View",
  "script": "frappe.listview_settings['Gate Pass In'] = {\n   has_indicator_for_cancelled: true,\n   has_indicator_for_Submitted: true,\n   get_indicator(doc)  {\n     \n       if (doc.docstatus == 1 && doc.completed == 0) {\n           return [__(\"Open\"), \"green\", \"completed,=,0\"];\n       }\n       else if (doc.docstatus == 1 && doc.completed == 1) {\n           return [__(\"Close\"), \"red\", \"completed,=,1\"];\n       }\n   },\n}\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-06-18 17:20:42.073535",
  "module": "vijaymamra",
  "name": "Supplier Wise Automatically Add Tax Stop",
  "script": "frappe.ui.form.on('Sales Invoice', {\r    on_submit:function(frm){        \r        if(frm.doc.is_return == 0  && frm.doc.custom_deliver_note_no != undefined){\r            frappe.call({\r                method:\"status update in purchase order truck\",\r                args:{\"delivery_name\":frm.doc.custom_deliver_note_no, \"truck_no\":frm.doc.custom_truck_no}\r            })\r        }\r    },\r    onload:function(frm){\r        if(frm.doc.is_return == 1){\r            frm.set_value(\"naming_series\", \"SRET-.YY.-\")\r        }\r    },\r    before_save:function(frm){\r        var total_bag = 0\r        $.each(frm.doc.items || [], function(i,d){           \r            total_bag += d.custom_bag\r            if(d.item_tax_template != undefined){\r                frappe.call({\r    \t            method:\"tax rate get into the tax template\",\r    \t            args:{'name':d.item_tax_template}\r    \t        }).then(records =>{\r    \t            var data = records['data']\r    \t            var rate_data = records['rate_data']\r    \t            \r    \t            rate_data.forEach(function(obj){\r    \t                \r    \t                if(data[0][0] == 1){\t                    \r    \t                    d.custom_cgst_rate = obj.tax_rate\r    \t                    d.custom_sgst_rate = obj.tax_rate\r    \t                    d.custom_cgst_amount = d.amount * d.custom_cgst_rate / 100\t                    \r    \t                    d.custom_sgst_amount = d.amount * d.custom_sgst_rate / 100\r    \t                }\r    \t                else {\r    \t                    d.custom_igst_rate = obj.tax_rate\r    \t                    d.custom_igst_amount = d.amount * d.custom_igst_rate / 100\r    \t                }\r    \t            })\r    \t            frm.set_value('items', frm.doc.items);\r    \t        })\r            }\r        })\r        \r        frm.set_value(\"custom_total_bag\", total_bag)\r    }\r});\r\rfrappe.ui.form.on('Sales Invoice Item', {\r\titem_code: function(frm) {\r    \r    var isNilExemptChecked = false;\r    \r    $.each(frm.doc.items || [], function(i, d) {\r      if (d.is_nil_exempt == 1) {\r        isNilExemptChecked = true;\r        return false; \r      }\r    });\r\r    \r    if (isNilExemptChecked) {\r      $.each(frm.doc.taxes || [], function(j, tax) {\r        if (tax.account_head.toUpperCase().includes('GST')) {\r            frappe.model.set_value(tax.doctype, tax.name, 'rate', 0);\r        }\r      });\r      \r      frm.refresh_fields('taxes');\r    }\r  },\r  custom_rate_per_kg:function(frm) {\r\t  var total_rate = 0.0\r\t\t$.each(frm.doc.items || [], function(i,d){\r\t\t     frappe.call({\r\t\t        method:'frappe.client.get_list',\r\t\t        args:{\r\t\t            doctype:'Item',\r\t\t            filters: {\r\t\t                'name':d.item_code\r\t\t            },\r\t\t            fields: ['stock_uom']\r\t\t        },\r\t\t        callback: function (r) {\r\t\t            if(r.message[0]['stock_uom'] == d.uom){\r\t\t\t\t\t\t\tif(d.custom_rate_per_kg > 150)\r\t\t\t\t\t\t\t{\t\t      \r\t\t\t\t\t\t\t\td.rate = (d.custom_rate_per_kg / 20) * d.weight_per_unit\r\t\t\t\t\t\t\t\td.amount = d.rate * d.qty\r\t\t\t\t\t\t\t\ttotal_rate += d.amount\r\t\t\t\t\t\t\t}\r\t\t\t\t\t\t\telse{\t\t     \r\t\t\t\t\t\t\t\td.rate = d.custom_rate_per_kg  * d.weight_per_unit\r\t\t\t\t\t\t\t\td.amount = d.rate * d.qty\r\t\t\t\t\t\t\t\ttotal_rate += d.amount\r\t\t\t\t\t\t\t}\r\t\t\t\t\t\t\td.custom_cgst_amount = d.amount * d.custom_cgst_rate / 100\r\t\t\t\t\t\t\td.custom_sgst_amount = d.amount * d.custom_sgst_rate / 100\r\t\t\t\t\t\t\td.custom_igst_amount = d.amount * d.custom_igst_rate / 100\r\t\t\t\t\t\t\r\t\t\t\t\t\tfrm.refresh_field(\"items\")\r\t\t\t\t\t\tfrm.set_value('total', total_rate)\r\t\t\t\t\t\tcur_frm.cscript.calculate_taxes_and_totals();\r\t\t        \t}\r\t\t\t\t}\r\t\t\t })\r\t\t})\r\t},\r\titem_tax_template:function(frm){\t    \r\t    $.each(frm.doc.items || [], function(i,d){\t        \r    \t        frappe.call({\r    \t            method:\"tax rate get into the tax template\",\r    \t            args:{'name':d.item_tax_template}\r    \t        }).then(records =>{\r    \t            var data = records['data']\r    \t            var rate_data = records['rate_data']\r    \t            \r    \t            rate_data.forEach(function(obj){\r    \t                if(data[0][0] == 1){\r    \t                    d.custom_cgst_rate = obj.tax_rate\r    \t                    d.custom_sgst_rate = obj.tax_rate\r    \t                    d.custom_cgst_amount = d.amount * d.custom_cgst_rate / 100\r    \t                    d.custom_sgst_amount = d.amount * d.custom_sgst_rate / 100\r    \t                }\r    \t                else{\r    \t                    d.custom_igst_rate = obj.tax_rate\r    \t                    d.custom_igst_amount = d.amount * d.custom_igst_rate / 100\r    \t                }\r    \t            })\r    \t        })    \t    \r    \t    frm.refresh_field(\"items\")\r\t    })\r\t},\r\tqty:function(frm){\r\t    var total_bag = 0;\r\t    $.each(frm.doc.items || [], function(i,d){\t        \r\t        d.custom_bag = d.qty\r\t        total_bag += d.custom_bag\r\t    })\r\t    frm.set_value(\"custom_total_bag\", total_bag)\r\t    frm.refresh_field(\"items\")\r\t},\r\tcustom_bag:function(frm){\r\t    var total_bag = 0;\r\t    $.each(frm.doc.items || [], function(i,d){\r\t        total_bag += d.custom_bag\r\t    })\r\t    \r\t    frm.set_value(\"custom_total_bag\", total_bag)\r\t}\r\r})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2023-10-17 10:30:15.994476",
  "module": "vijaymamra",
  "name": "Purchase Order Customisation",
  "script": "frappe.ui.form.on('Purchase Order Item', {\n\tcustom_rate_per_kg:function(frm) {\n\t    var total_rate = 0.0\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t    if(d.custom_rate_per_kg > 150){\n\t\t        d.rate = d.custom_rate_per_kg / 20\n\t\t    }\n\t\t    else{\n\t\t        d.rate = d.custom_rate_per_kg\n\t\t    }\n\t\t    d.amount = d.rate * d.qty\n\t\t    total_rate += d.amount\n\t\t})\n\t\tfrm.set_value('total', total_rate);\n\t\tfrm.refresh_field(\"items\");\n\t\tcur_frm.cscript.calculate_taxes_and_totals();\n\t\tfrm.refresh_fields();\n\t},\n\titem_code: function(frm) {\n    \n    var isNilExemptChecked = false;\n    \n    $.each(frm.doc.items || [], function(i, d) {\n      if (d.is_nil_exempt == 1) {\n        isNilExemptChecked = true;\n        return false; \n      }\n    });\n\n    \n    if (isNilExemptChecked) {\n      $.each(frm.doc.taxes || [], function(j, tax) {\n        if (tax.account_head.toUpperCase().includes('GST')) {\n          frappe.model.set_value(tax.doctype, tax.name, 'rate', 0);\n        }\n      });\n      \n      frm.refresh_fields('taxes');\n    }\n  }\n})\n\nfrappe.ui.form.on('Purchase Order',{\n    onload:function(frm){\n        frm.set_query('custom_broker', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\tfilters: {\n\t\t\t  'supplier_group': 'Brokers', \n\t\t\t}\n            \t};\n\t    });\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2024-06-25 15:13:56.301932",
  "module": "vijaymamra",
  "name": "Sales order Customization",
  "script": "frappe.ui.form.on('Sales Order Item', {\n\tcustom_rate_per_kg:function(frm) {\n\t    var total_rate = 0.0\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t    frappe.call({\n\t\t        method:'frappe.client.get_list',\n\t\t        args:{\n\t\t            doctype:'Item',\n\t\t            filters: {\n\t\t                'name':d.item_code\n\t\t            },\n\t\t            fields: ['stock_uom']\n\t\t        },\n\t\t        callback: function (r) {\n\t\t            if(r.message[0]['stock_uom'] == d.uom){\n            \t\t    if(d.custom_rate_per_kg > 150)\n            \t\t    {\n            \t\t        d.rate = (d.custom_rate_per_kg / 20) * d.weight_per_unit\n                \t\t    d.amount = d.rate * d.qty\n                \t\t    total_rate += d.amount\n            \t\t    }\n            \t\t    else{\n            \t\t        d.rate = d.custom_rate_per_kg  * d.weight_per_unit\n                \t\t    d.amount = d.rate * d.qty\n                \t\t    total_rate += d.amount\n            \t\t    }\n\t\t            }\n\t\t            frm.refresh_field(\"items\")\n\t\t        }\n\t\t    })\n\t\t})\n\t\tfrm.set_value('total', total_rate)\n\t\tcur_frm.cscript.calculate_taxes_and_totals();\n\t},\n    item_code: function(frm) {\n        var isNilExemptChecked = false;\n        \n        $.each(frm.doc.items || [], function(i, d) {\n          if (d.is_nil_exempt == 1) {\n            isNilExemptChecked = true;\n            return false; \n          }\n        });\n    \n        \n        if (isNilExemptChecked) {\n          $.each(frm.doc.taxes || [], function(j, tax) {\n            if (tax.account_head.toUpperCase().includes('GST')) {\n              frappe.model.set_value(tax.doctype, tax.name, 'rate', 0);\n            }\n          });\n          \n          frm.refresh_fields('taxes');\n        }\n    },\n});\n\nfrappe.ui.form.on('Sales Order', {\n    onload: function(frm) {\n        if(frm.is_new()){\n            if(frm.doc.custom_transaction_type_ == \"GST Tax Invoice\"){\n        \t\t    set_field_options(\"naming_series\", [\"SOVM-.###\", \"SOCASH-.###\"])\n        \t\t    var a = \"SOVM-.###\"\n        \t\t    frm.set_value(\"naming_series\", a)\n        \t\t}\n        \t\telse if(frm.doc.custom_transaction_type_ == \"Bill Of Supply\"){\n        \t\t    set_field_options(\"naming_series\", [\"SOBVM-.###\", \"SOCASH-.###\"])\n        \t\t    var a = \"SOBVM-.###\"\n        \t\t    frm.set_value(\"naming_series\", a)\n        \t\t}\n        }\n    },\n\n\n    custom_transaction_type_:function(frm){\n        if(frm.doc.custom_transaction_type_ == \"GST Tax Invoice\"){\n\t\t    set_field_options(\"naming_series\", [\"SOVM-.###\", \"SOCASH-.###\"])\n\t\t    var a = \"SOVM-.###\"\n\t\t    frm.set_value(\"naming_series\", a)\n\t\t}\n\t\telse if(frm.doc.custom_transaction_type_ == \"Bill Of Supply\"){\n\t\t    set_field_options(\"naming_series\", [\"SOBVM-.###\", \"SOCASH-.###\"])\n\t\t    var a = \"SOBVM-.###\"\n\t\t    frm.set_value(\"naming_series\", a)\n\t\t}\n    }\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 0,
  "modified": "2023-10-13 15:33:54.485935",
  "module": "vijaymamra",
  "name": "Supplier Master Customisation",
  "script": "frappe.ui.form.on('Supplier', {\n\tbefore_save:function(frm) {\n\t    if(frm.doc.supplier_group == \"Brokers\")\n\t    {\n\t        set_field_options(\"naming_series\", [\"BR.###\"])\n    \t\tvar a =  \"BR.###\"\n    \t\tfrm.set_value(\"naming_series\",a)\n    \t\tfrm.set_value(\"custom_series\",a)\n\t    }\n\t    else if(frm.doc.supplier_group == \"Machine Hardware and Electrical\"){\n\t        set_field_options(\"naming_series\", [\"MH.###\"])\n    \t\tvar a =  \"MH.###\"\n    \t\tfrm.set_value(\"naming_series\",a)\n    \t\tfrm.set_value(\"custom_series\",a)\n\t    }\n\t    else if(frm.doc.supplier_group == \"Makkai Poha\"){\n\t        set_field_options(\"naming_series\", [\"CF.###\"])\n    \t\tvar a =  \"CF.###\"\n    \t\tfrm.set_value(\"naming_series\",a)\n    \t\tfrm.set_value(\"custom_series\",a)\n\t    }\n\t    else if(frm.doc.supplier_group == \"Poha Supplier\"){\n\t        set_field_options(\"naming_series\", [\"POS.###\"])\n    \t\tvar a =  \"POS.###\"\n    \t\tfrm.set_value(\"naming_series\",a)\n    \t\tfrm.set_value(\"custom_series\",a)\n\t    }\n\t    else if(frm.doc.supplier_group == \"Transport\"){\n\t        set_field_options(\"naming_series\", [\"TR.###\"])\n    \t\tvar a =  \"TR.###\"\n    \t\tfrm.set_value(\"naming_series\",a)\n    \t\tfrm.set_value(\"custom_series\",a)\n\t    }\n\t    else{\n    \t\tvar list = frm.doc.supplier_group.split(' ')\n    \t\tvar series = \"\"\n    \t\tlist.forEach(function(obj){\n    \t\t    series += obj[0][0]\n    \t\t})\n    \t\tset_field_options(\"naming_series\", [series + \".###\"])\n    \t\tvar a = series + \".###\"\n    \t\tfrm.set_value(\"naming_series\",a)\n    \t\tfrm.set_value(\"custom_series\",a)\n\t    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2024-05-23 10:51:46.109284",
  "module": "vijaymamra",
  "name": "Purchase Invoice Customisation",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\tonload:function(frm) {\n\t\tif(frm.doc.is_return == 1){\n\t\t    frm.set_value(\"naming_series\", \"PRET-.YY.-\")\n\t\t}\n\t},\n\tcustom_vehicle_no:function(frm){\n\t    frm.set_value(\"vehicle_no\", frm.doc.custom_vehicle_no)\n\t}\n})\n\nfrappe.ui.form.on('Purchase Invoice Item', {\n\titem_code: function(frm) {\n    \n    var isNilExemptChecked = false;\n    \n    $.each(frm.doc.items || [], function(i, d) {\n      if (d.is_nil_exempt == 1) {\n        isNilExemptChecked = true;\n        return false; \n      }\n    });\n\n    \n    if (isNilExemptChecked) {\n      $.each(frm.doc.taxes || [], function(j, tax) {\n        if (tax.account_head.toUpperCase().includes('GST')) {\n          frappe.model.set_value(tax.doctype, tax.name, 'rate', 0);\n        }\n      });\n      \n      frm.refresh_fields('taxes');\n    }\n  },\n  \tcustom_rate_per_kg:function(frm) {\n\t    var total_rate = 0.0\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t    if(d.custom_rate_per_kg > 150){\n\t\t        d.rate = d.custom_rate_per_kg / 20\n\t\t    }\n\t\t    else{\n\t\t        d.rate = d.custom_rate_per_kg\n\t\t    }\n\t\t    d.amount = d.rate * d.qty\n\t\t    total_rate += d.amount\n\t\t})\n\t\tfrm.set_value('total', total_rate);\n\t\tfrm.refresh_field(\"items\");\n\t\tcur_frm.cscript.calculate_taxes_and_totals();\n\t\tfrm.refresh_fields();\n\t},\n})\n\n\n\n// frappe.ui.form.on('Purchase Invoice',{\n//       onload:function(frm){\n//         frm.set_query('custom_broker', function(doc, cdt, cdn) {\n//             let d = locals[cdt][cdn];\n//             return{\n// \t\t\tfilters: {\n// \t\t\t  'supplier_group': 'Brokers', \n// \t\t\t}\n//             \t};\n// \t    });\n//     }\n// })",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2023-10-17 10:32:54.630654",
  "module": "vijaymamra",
  "name": "Purchase Receipt Customisation",
  "script": "frappe.ui.form.on('Purchase Receipt Item', {\n\titem_code: function(frm) {\n    \n    var isNilExemptChecked = false;\n    \n    $.each(frm.doc.items || [], function(i, d) {\n      if (d.is_nil_exempt == 1) {\n        isNilExemptChecked = true;\n        return false; \n      }\n    });\n\n    \n    if (isNilExemptChecked) {\n      $.each(frm.doc.taxes || [], function(j, tax) {\n        if (tax.account_head.toUpperCase().includes('GST')) {\n          frappe.model.set_value(tax.doctype, tax.name, 'rate', 0);\n        }\n      });\n      \n      frm.refresh_fields('taxes');\n    }\n  },\n  \tcustom_rate_per_kg:function(frm) {\n\t    var total_rate = 0.0\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t    if(d.custom_rate_per_kg > 150){\n\t\t        d.rate = d.custom_rate_per_kg / 20\n\t\t    }\n\t\t    else{\n\t\t        d.rate = d.custom_rate_per_kg\n\t\t    }\n\t\t    d.amount = d.rate * d.qty\n\t\t    total_rate += d.amount\n\t\t})\n\t\tfrm.set_value('total', total_rate);\n\t\tfrm.refresh_field(\"items\");\n\t\tcur_frm.cscript.calculate_taxes_and_totals();\n\t\tfrm.refresh_fields();\n\t},\n})\nfrappe.ui.form.on('Purchase Receipt',{\n      onload:function(frm){\n        frm.set_query('custom_broker', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\tfilters: {\n\t\t\t  'supplier_group': 'Brokers', \n\t\t\t}\n            \t};\n\t    });\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Journal Entry",
  "enabled": 0,
  "modified": "2024-05-23 14:30:17.621185",
  "module": "vijaymamra",
  "name": "Get Account Payable in accounting entries table",
  "script": "frappe.ui.form.on('Journal Entry Account', {\n    party: function(frm, cdt, cdn) {\n        var child = locals[cdt][cdn];\n\n        if (child.party_type == 'Employee') {\n            frappe.call({\n                method: 'frappe.client.get_list',\n                args: {\n                    doctype: \"Employee\",\n                    filters: {\n                        name: child.party,\n                    },\n                    fields: [\"custom_payable_account\"]\n                },\n                callback: function(response) {\n                    console.log(response.message[0].custom_payable_account);\n                    frappe.model.set_value(cdt, cdn, 'account', response.message[0].custom_payable_account);\n                    frm.fields_dict['accounts'].grid.refresh();\n                    frm.fields_dict['accounts'].grid.get_field('party_type').refresh();\n                }\n            });\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2024-02-02 15:57:01.503805",
  "module": "vijaymamra",
  "name": "Add custom button to show general ledger report",
  "script": "frappe.ui.form.on('Employee', {\n\trefresh(frm) {\n        frm.add_custom_button(__('View Ledger'), function () {\n\t\t\t\tfrappe.set_route('query-report', 'General Ledger',\n\t\t\t\t\t{ party_type: 'Employee', party: frm.doc.name, party_name: frm.doc.employee_name });\n\t\t\t});\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Packing Slip",
  "enabled": 1,
  "modified": "2024-02-08 15:25:11.825913",
  "module": "vijaymamra",
  "name": "Packing Slip customization",
  "script": "frappe.ui.form.on('Packing Slip', {\n\tdelivery_note:function(frm) {\n\t\tif(frm.is_new()){\n            frm.set_query('item_code', 'items', function (doc, cdt, cdn) {\n                let d = locals[cdt][cdn];\n                return {\n                    filters: {\n                        'is_stock_item': 1,\n                    }\n                };\n            });\n           \n            cur_frm.clear_table(\"items\");\n            frm.refresh_field(\"items\");\n            frm.refresh()\n        }\n\t},\n})\n\nfrappe.ui.form.on('Packing Slip', {\n    before_save:function(frm){\n        $.each(frm.doc.items || [], function(i,d){\n\t        var total_weight = d.net_weight * d.qty\n\t        d.custom_total_weight = total_weight\n\t    })\n\t    frm.refresh_field(\"items\")\n    }\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-04-23 16:55:28.954148",
  "module": "vijaymamra",
  "name": "Sales Invoice Customisation",
  "script": "frappe.ui.form.on('Sales Invoice', {\n    onload: function(frm) {\n    //     var naming_series = frm.doc.naming_series;\n    //         if(frm.is_new() && naming_series == \"GST-\") {\n    //             setTimeout(function() {\n    //                 frm.set_query('item_code', 'items', function (doc, cdt, cdn) {\n    //                     return {\n    //                         filters: {\n    //                             \"is_sales_item\": 1,\n    //                             \"is_nil_exempt\": 0,\n    //                         }\n    //                     };\n    //                 });\n    //             }, 100);\n                \n    //             cur_frm.clear_table(\"items\");\n    //             frm.refresh_field(\"items\");\n    //             frm.refresh();\n    //             frm.set_value(\"taxes_and_charges\", \"Freight + Loading(Nil GST) - VMPL\")\n    //         }\n        if(frm.is_new()){\n            if(frm.doc.is_return == 0){\n                if(frm.doc.custom_transaction_type_ == \"GST Tax Invoice\"){\n        \t\t    set_field_options(\"naming_series\", [\"VM-.###\", \"CASH-.###\"])\n        \t\t    var a = \"VM-.###\"\n        \t\t    frm.set_value(\"naming_series\", a)\n        \t\t}\n        \t\telse if(frm.doc.custom_transaction_type_ == \"Bill Of Supply\"){\n        \t\t    set_field_options(\"naming_series\", [\"BVM-.###\", \"CASH-.###\"])\n        \t\t    var a = \"BVM-.###\"\n        \t\t    frm.set_value(\"naming_series\", a)\n        \t\t}\n            }else{\n                set_field_options(\"naming_series\", [\"SRET-.YY.-\"])\n        \t\tvar a = \"SRET-.YY.-\"\n        \t\tfrm.set_value(\"naming_series\", a)\n            }\n        }\n    },\n\n// \tnaming_series:function(frm){\n// \t    var naming_series = frm.doc.naming_series;\n// \t    if(frm.is_new() && naming_series == \"GST-\"){\n//             frm.set_query('item_code', 'items', function (doc, cdt, cdn) {\n//                 return {\n//                     filters: {\n//                         \"is_sales_item\": 1,\n//                         \"is_nil_exempt\": 0,\n//                     }\n//                 };\n//             });\n           \n//             cur_frm.clear_table(\"items\");\n//             frm.refresh_field(\"items\");\n//             frm.refresh()\n//         }\n//         else if(frm.is_new() && naming_series == \"BOS-\"){\n//             frm.set_query('item_code', 'items', function (doc, cdt, cdn) {\n//                 return {\n//                     filters: {\n//                         \"is_sales_item\": 1,\n//                         \"is_nil_exempt\": 1,\n//                     }\n//                 };\n//             });\n           \n//             cur_frm.clear_table(\"items\");\n//             frm.refresh_field(\"items\");\n//             frm.refresh()\n//         }\n// \t},\n\tcustom_truck_no:function(frm){\n\t    frm.set_value(\"vehicle_no\", frm.doc.custom_truck_no)\n\t},\n\tcustom_transaction_type_:function(frm){\n        if(frm.doc.custom_transaction_type_ == \"GST Tax Invoice\"){\n\t\t    set_field_options(\"naming_series\", [\"VM-.###\", \"CASH-.###\"])\n\t\t    var a = \"VM-.###\"\n\t\t    frm.set_value(\"naming_series\", a)\n\t\t}\n\t\telse if(frm.doc.custom_transaction_type_ == \"Bill Of Supply\"){\n\t\t    set_field_options(\"naming_series\", [\"BVM-.###\", \"CASH-.###\"])\n\t\t    var a = \"BVM-.###\"\n\t\t    frm.set_value(\"naming_series\", a)\n\t\t}\n    },\n    is_return:function(frm){\n        if(frm.doc.is_return == 1){\n            set_field_options(\"naming_series\", [\"SRET-.YY.-\"])\n        \tvar a = \"SRET-.YY.-\"\n        \tfrm.set_value(\"naming_series\", a)\n        }else{\n            if(frm.doc.custom_transaction_type_ == \"GST Tax Invoice\"){\n    \t\t    set_field_options(\"naming_series\", [\"VM-.###\", \"CASH-.###\"])\n    \t\t    var a = \"VM-.###\"\n    \t\t    frm.set_value(\"naming_series\", a)\n    \t\t}\n    \t\telse if(frm.doc.custom_transaction_type_ == \"Bill Of Supply\"){\n    \t\t    set_field_options(\"naming_series\", [\"BVM-.###\", \"CASH-.###\"])\n    \t\t    var a = \"BVM-.###\"\n    \t\t    frm.set_value(\"naming_series\", a)\n    \t\t}\n        }\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 0,
  "modified": "2024-05-23 14:29:57.567635",
  "module": "vijaymamra",
  "name": "Customer Group Select Then Auto Select Account",
  "script": "frappe.ui.form.on('Customer', {\n\tcustomer_group:function(frm) {\n\t\tfrappe.call({\n\t\t    method: 'Get Account Name',\n\t\t    args:{\n\t\t        'customer_group':frm.doc.customer_group\n\t\t    }\n\t\t}).then(records => {\n            var receivedData = records['data']\n            var wordToMatch = frm.doc.customer_group;\n            \n            // Filter the records to only include those where the name contains the wordToMatch\n            var filteredData = receivedData.filter(function(record) {\n                return record.name.includes(wordToMatch);\n            });\n            \n            filteredData.forEach(function(obj){\n                var row = frm.add_child('accounts')\n                row.account = obj['name']\n            });\n            frm.refresh_field('accounts')\n\n        })\n\t}\n})\n\n\n",
  "view": "Form"
 }
]